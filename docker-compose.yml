# docker-compose.yml
services:
  postgres:
    image: "postgres:13-alpine"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgresdb
      POSTGRES_PASSWORD: secretpass
    ports:
      - 5432:5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgresdb -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    env_file:
      - .env
    ports: 
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      args:
        GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    environment:
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    env_file:
      - .env
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge